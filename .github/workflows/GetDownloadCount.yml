name: Update Download Count on Release

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs once a week at midnight.
  workflow_dispatch:  # Allows manual triggering
  release:
    types: [published] # when a new release is made
  
jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Download Count
        id: fetch_downloads
        run: |
          releases=$(curl -s https://api.github.com/repos/shupershuff/diablo2rloader/releases)
          
          # Debug: Print releases to check the response
          echo "Releases data: $releases"
          echo "test0"
          # Check if releases is empty or not valid JSON
          if [ -z "$releases" ] || ! echo "$releases" | jq empty; then
            echo "Error: No releases found or invalid JSON response."
            exit 1
          fi
          echo "test1"
          # Initialize variables for max downloads
          max_download_count=0
          release_with_max_downloads=""

          # Loop through all releases and find the one with the highest download count
          for release in $(echo "$releases" | jq -c '.[]'); do
            echo "test2"
            release_data=$(echo "$release" | jq '.')
            download_count=$(echo "$release_data" | jq '[.assets[].download_count // 0] | add')
             echo "test3"
            # Check if this release has more downloads than the current max
            if [ "$download_count" -gt "$max_download_count" ]; then
               echo "test4 is max so far"
              max_download_count=$download_count
              release_with_max_downloads=$(echo "$release_data" | jq -r '.tag_name')
            fi
          done

          echo "Max downloads: $max_download_count for release: $release_with_max_downloads"
          echo "download_count=$max_download_count" >> $GITHUB_OUTPUT


      - name: Update JSON File
        run: |
          echo '{
            "schemaVersion": 1,
            "label": "Downloads",
            "message": "'${{ steps.fetch_downloads.outputs.download_count }}'",
            "color": "blue"
          }' > .github/max-release-download-count.json

      - name: Commit and Push Changes
        env:
          TOKEN: ${{ secrets.ACTIONS_PUSH_TOKEN }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .github/max-release-download-count.json
          git diff --cached --exit-code || git commit -m 'Update download count' || echo "No changes to commit"
          git push https://$TOKEN@github.com/shupershuff/Diablo2RLoader.git HEAD:main || echo "No changes to push"
